@use "sass:map";
@use "sass:math";
@use "../config";
@use "../base/settings" as *;
@use "../utilities/wrapper";
@use "../utilities/grid";
@use "../utilities/cluster";

.featured-projects {
    --featured-projects-header-height: 86px;

    position: relative;
}

.featured-projects--count-1 {
    height: calc((var(--vh) - var(--site-gutter-slat) * 2) * 2);

    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        height: calc((var(--vh) - var(--site-gutter-slat) * 2) * 2 - (var(--featured-projects-header-height) * 1));
    }
}

.featured-projects--count-2 {
    height: calc((var(--vh) - var(--site-gutter-slat) * 2) * 3);

    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        height: calc((var(--vh) - var(--site-gutter-slat) * 2) * 3 - (var(--featured-projects-header-height) * 2));
    }
}

.featured-projects--count-3 {
    height: calc((var(--vh) - var(--site-gutter-slat) * 2) * 4);

    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        height: calc((var(--vh) - var(--site-gutter-slat) * 2) * 4 - (var(--featured-projects-header-height) * 3));
    }
}

.featured-projects--count-4 {
    height: calc((var(--vh) - var(--site-gutter-slat) * 2) * 5);

    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        height: calc((var(--vh) - var(--site-gutter-slat) * 2) * 5 - (var(--featured-projects-header-height) * 4));
    }
}

.featured-projects--count-5 {
    height: calc((var(--vh) - var(--site-gutter-slat) * 2) * 6);

    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        height: calc((var(--vh) - var(--site-gutter-slat) * 2) * 6 - (var(--featured-projects-header-height) * 5));
    }
}

.featured-projects.below-vh {
    display: flex;
    flex-direction: column;
    gap: fd(48, 64);
    max-width: calc(100% - var(--site-gutter-slat) * 2);
    height: auto;
    padding-block-end: fd(48, 64);
    margin-inline: auto;
    background-color: var(--color-background-secondary);
    background-image: linear-gradient(var(--color-border-opaque) 1px, transparent 1px), linear-gradient(90deg, var(--color-border-opaque) 1px, transparent 1px);
    background-size: 18px 18px;
    border-radius: var(--radius-lg);
}

.featured-projects__bg {
    position: sticky;
    top: var(--site-gutter-slat);
    left: var(--site-gutter-slat);
    display: flex;
    align-items: center;
    width: calc(100% - var(--site-gutter-slat) * 2);
    height: calc(var(--vh) - var(--site-gutter-slat) * 2);
    background-color: var(--color-background-secondary);
    background-image: linear-gradient(var(--color-border-opaque) 1px, transparent 1px), linear-gradient(90deg, var(--color-border-opaque) 1px, transparent 1px);
    background-size: 18px 18px;
    border-radius: var(--radius-lg);

    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        align-items: flex-start;
    }
}

.featured-projects.below-vh .featured-projects__bg {
    position: static;
    height: auto;
    margin-inline: auto;
    background-color: transparent;
    background-image: none;
    border-radius: 0;
}

.featured-projects__header {
    display: flex;
    flex: 1;
    align-items: center;
    justify-content: space-between;
    height: var(--featured-projects-header-height);
    padding-inline: fd(map.get(config.$site-gutter-slat, min), map.get(config.$site-gutter, max), $min-viewport: map.get($breakpoints, lg));

    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        padding-inline: var(--site-gutter-slat);
    }
}

.featured-projects.below-vh .featured-projects__header {
    padding-inline: 0;
}

.featured-projects__cta > a {
    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        min-width: 0;
    }
}

.featured-projects__cta > a > span:first-child {
    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        display: none;
    }
}

.featured-projects__item-container {
    position: sticky;
    top: var(--site-gutter-slat);
    display: flex;
    align-items: center;
    justify-content: center;
    width: calc(100% - var(--site-gutter-slat) * 4);
    max-width: rem(490);
    height: calc(var(--vh) - var(--site-gutter-slat) * 2);
    margin-inline: auto;

    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        top: calc(var(--featured-projects-header-height) + var(--site-gutter-slat));
        height: calc(var(--vh) - var(--featured-projects-header-height) - var(--site-gutter-slat) * 2);
    }

    @media screen and (max-width: em(map.get($breakpoints, sm))) {
        width: calc(90% - var(--site-gutter-slat) * 4);
    }
}

.featured-projects.below-vh .featured-projects__item-container {
    position: static;
    height: auto;
}

// .featured-projects__item-container:nth-of-type(1) {
//     background-color: rgb(167 239 22 / 30%);
// }

// .featured-projects__item-container:nth-of-type(2) {
//     background-color: rgb(22 120 239 / 30%);
// }

// .featured-projects__item-container:last-of-type {
//     background-color: rgb(217 22 239 / 30%);
// }

.featured-projects__item {
    display: flex;
    flex-direction: column-reverse;
    background-color: var(--color-background-primary);
    border-radius: var(--radius-lg);
    box-shadow: 0 1px 3px rgb(0 0 0 / 25%);
}

.featured-projects__item-container:nth-of-type(2) .featured-projects__item {
    transform: rotate(0deg);
}

.featured-projects__item-container:nth-of-type(3) .featured-projects__item {
    transform: rotate(-5deg);
}

.featured-projects__item-container:nth-of-type(4) .featured-projects__item {
    transform: rotate(5deg);
}

.featured-projects__item-container:nth-of-type(5) .featured-projects__item {
    transform: rotate(-5deg);
}

.featured-projects__item-container:nth-of-type(6) .featured-projects__item {
    transform: rotate(5deg);
}

.featured-projects.below-vh .featured-projects__item {
    transform: rotate(0deg);
}

.featured-projects__item__main {
    padding-block: fd(16, 32) fd(16, 24);
    padding-inline: fd(16, 32);
}

.featured-projects__item__main > * + * {
    margin-block-start: fd(18, 24);
}

.featured-projects__item__sub-categories {
    display: flex;
    flex-wrap: wrap;
    gap: rem(8);
    padding-block-start: fd(18, 24);
    border-block-start: 1px solid var(--color-border-opaque);
}

.featured-projects__item__header {
    display: flex;
    flex-direction: column-reverse;
    gap: fd(12, 16);
}

.featured-projects__item__main-category {
    font-size: fd(rem(map.get($min-font-sizes, s-2)), rem(map.get($max-font-sizes, s0)));
    line-height: var(--line-height-sign);
}

.featured-projects__item__sub-category {
    font-size: fd(rem(map.get($min-font-sizes, s-3)), rem(map.get($max-font-sizes, s0)));
    line-height: var(--line-height-sign);
}

.featured-projects__item__heading {
    // font-headline-2からfont-textへの流体サイジングに、line-height-headline-2の行高を掛けてpx値に変換
    $min-lh-value: map.get($min-font-sizes, s0) * (math.div(math.max(map.get($min-line-height-sizes, s4), map.get($max-line-height-sizes, s4)) - math.min(map.get($min-line-height-sizes, s4), map.get($max-line-height-sizes, s4)), 2) + math.min(map.get($min-line-height-sizes, s4), map.get($max-line-height-sizes, s4))) * 1px;
    $max-lh-value: map.get($max-font-sizes, s3) * (math.div(math.max(map.get($min-line-height-sizes, s4), map.get($max-line-height-sizes, s4)) - math.min(map.get($min-line-height-sizes, s4), map.get($max-line-height-sizes, s4)), 2) + math.min(map.get($min-line-height-sizes, s4), map.get($max-line-height-sizes, s4))) * 1px;

    font-size: fd(rem(map.get($min-font-sizes, s0)), rem(map.get($max-font-sizes, s3)));
    font-weight: var(--font-weight-bold);
    line-height: fd($min-lh-value, $max-lh-value);
}

.featured-projects__item__thumbnail-container {
    padding-block-start: fd(18, 24);
    padding-inline: fd(18, 24);
}

.featured-projects__item__excerpt {
    // font-textからfont-text--xsへの流体サイジングに、line-height-textの行高を掛けてpx値に変換
    $min-lh-value: map.get($min-font-sizes, s-2) * (math.div(math.max(map.get($min-line-height-sizes, s0), map.get($max-line-height-sizes, s0)) - math.min(map.get($min-line-height-sizes, s0), map.get($max-line-height-sizes, s0)), 2) + math.min(map.get($min-line-height-sizes, s0), map.get($max-line-height-sizes, s0))) * 1px;
    $max-lh-value: map.get($max-font-sizes, s0) * (math.div(math.max(map.get($min-line-height-sizes, s0), map.get($max-line-height-sizes, s0)) - math.min(map.get($min-line-height-sizes, s0), map.get($max-line-height-sizes, s0)), 2) + math.min(map.get($min-line-height-sizes, s0), map.get($max-line-height-sizes, s0))) * 1px;

    margin-block-start: fd(8, 20);
    font-size: fd(rem(map.get($min-font-sizes, s-2)), rem(map.get($max-font-sizes, s0)));
    line-height: fd($min-lh-value, $max-lh-value);

    @media screen and (max-width: em(map.get($breakpoints, sm))) {
        display: none;
    }
}
