@use "sass:map";
@use "sass:math";
@use "../base/settings" as *;
@use "../utilities/flow";

.page-header:not(.page-header--has-cover) {
    border-bottom: 1px solid var(--color-border-opaque);
}

.page-header.page-header--has-cover {
    display: flex;
    flex-direction: column;
    height: calc(100vh - var(--site-header-height) - var(--site-gutter-slat));
}

.page-header__main {
    padding-block: fd(64, 96);
    padding-inline: var(--site-gutter);
}

.page-header__main__inner {
    display: flex;
    flex-direction: row-reverse;
    gap: fd(32, 96);
    align-items: flex-start;
    justify-content: flex-end;
    margin-inline: auto;

    @media screen and (max-width: em(map.get($breakpoints, sm))) {
        flex-direction: column-reverse;
    }
}

.single .page-header__main__inner {
    max-width: var(--width-wide);
}

.single-member .page-header__main__inner {
    align-items: center;

    @media screen and (max-width: em(map.get($breakpoints, sm))) {
        align-items: flex-start;
    }
}

.page-header__thumbnail {
    --n: 1;
    --d: 1;

    flex-basis: fd(200, 249);
    flex-shrink: 0;
    border-radius: var(--radius-lg);

    @media screen and (max-width: em(map.get($breakpoints, sm))) {
        --n: 1;
        --d: 0.5625;

        flex-basis: 100%;
        width: 100%;

        > img {
            width: 100%;
            height: 100%;
        }
    }
}

.single-member .page-header__thumbnail {
    --n: 1;
    --d: 1;
}

.page-header--has-cover .page-header__thumbnail {
    display: none;
}

.page-header__main__content__container {
    display: flex;
    gap: fd(96, 128);
    align-items: center;
    justify-content: space-between;
    width: 100%;

    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        flex-direction: column;
        gap: fd(32, 48);
        align-items: flex-start;
    }
}

.page-header__main__content {
    @extend %flow;

    flex-basis: auto;
}

.page .page-header__main__content,
.archive .page-header__main__content {
    flex-shrink: 0;
}

.page-header__title {
    --flow-space: #{fd(24, 32)};

    max-width: var(--width-wide);
    font: var(--font-headline-1);
    letter-spacing: -0.03em;
}

.archive .page-header__title,
.blog .page-header__title, // is_homeのページ
.page .page-header__title,
.error404 .page-header__title {
    font: var(--font-display);
}

.post-type-archive-blog .page-header__title > svg {
    display: block;
    width: fd(180, 270);
    height: auto;
}

.page-header__subtitle {
    // font-textからfont-text--smへの流体サイジングに、line-height-textの行高を掛けてpx値に変換
    $min-lh-value: map.get($min-font-sizes, s-1) * (math.div(math.max(map.get($min-line-height-sizes, s1), map.get($max-line-height-sizes, s1)) - math.min(map.get($min-line-height-sizes, s1), map.get($max-line-height-sizes, s1)), 2) + math.min(map.get($min-line-height-sizes, s1), map.get($max-line-height-sizes, s1))) * 1px;
    $max-lh-value: map.get($max-font-sizes, s0) * (math.div(math.max(map.get($min-line-height-sizes, s0), map.get($max-line-height-sizes, s0)) - math.min(map.get($min-line-height-sizes, s0), map.get($max-line-height-sizes, s0)), 2) + math.min(map.get($min-line-height-sizes, s0), map.get($max-line-height-sizes, s0))) * 1px;

    font-size: fd(rem(map.get($min-font-sizes, s-2)), rem(map.get($max-font-sizes, s0)));
    line-height: fd($min-lh-value, $max-lh-value);
}

.page-header__footer-meta {
    --flow-space: #{fd(12, 16)};
}

.page-header__date {
    font-size: fd(16, 18);
    font-weight: var(--font-weight-sign);
    line-height: var(--line-height-sign);
    letter-spacing: -0.03em;
}

.page-header .home-icon > svg {
    width: 1.2em;
    height: 1.2em;
}

// 1. カバーメディアの高さをメインコンテンツを除くコンテナの高さに合わせる
.page-header__cover {
    flex: 1; // 1
    min-height: 0; // 1
    padding-inline: var(--site-gutter-slat);
}

.page-header__cover-image {
    height: 100%;
    overflow: hidden;
    border-radius: var(--radius-lg);
}

.page-header__cover-image > img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.page-header__breadcrumbs-container {
    overflow: scroll;

    @media screen and (max-width: em(map.get($breakpoints, md))) {
        font-size: var(--font-size-text--sm);
        line-height: var(--line-height-sign);
    }
}

.single .page-header__breadcrumbs-container {
    display: flex;
    justify-content: flex-end;
    padding-block-end: fd(18, 24);
    padding-inline: var(--site-gutter);
    font-size: var(--font-size-text--sm);
    line-height: var(--line-height-sign);

    @media screen and (max-width: em(map.get($breakpoints, lg))) {
        justify-content: flex-start;
    }
}
