@use "sass:map";
@use "sass:math";
@use "../config";
@use "../base/settings" as *;
@use "../utilities/grid";
@use "../utilities/flow";
@use "../utilities/wrapper";

.archive-member {
    display: flex;
    gap: fd(1, 128);

    @media screen and (max-width: em(map.get($breakpoints, xl))) {
        flex-direction: column-reverse;
        gap: fd(48, 128);
    }
}

// 1. 非サイドバーの理想的な幅。「0」の場合は利用可能な幅を埋める。
// 2. 長いテキストが折り返されるようにする。
.archive-member__main {
    flex-basis: 0; // 1
    flex-grow: 999; // 1
    min-width: 0; // 2
}

.archive-member__main > * + * {
    margin-block-start: fd(48, 96);
}

// 1. 非サイドバーの理想的な幅。「0」の場合は利用可能な幅を埋める
// 2. 長いテキストが折り返されるようにする
.archive-member__items {
    display: grid;
    flex-basis: 0; // 1
    flex-grow: 999; // 1
    grid-template-columns: repeat(4, 1fr);
    gap: fd(18, 32);
    align-items: flex-start;
    min-width: 0; // 2

    @media screen and (max-width: em(map.get($breakpoints, xl))) {
        grid-template-columns: repeat(3, 1fr);
    }

    @media screen and (max-width: em(map.get($breakpoints, md))) {
        grid-template-columns: repeat(2, 1fr);
    }
}

.archive-member__item {
    display: flex;
    flex-direction: column-reverse;
    gap: fd(12, 18);
}

.archive-member__item__main > * + * {
    margin-block-start: fd(4, 6);
}

.archive-member__item__title {
    // font-headline-3からfont-textへの流体サイジングに、line-height-headline-3の行高を掛けてpx値に変換
    $min-lh-value: map.get($min-font-sizes, s0) * (math.div(math.max(map.get($min-line-height-sizes, s3), map.get($max-line-height-sizes, s3)) - math.min(map.get($min-line-height-sizes, s3), map.get($max-line-height-sizes, s3)), 2) + math.min(map.get($min-line-height-sizes, s3), map.get($max-line-height-sizes, s3))) * 1px;
    $max-lh-value: map.get($max-font-sizes, s2) * (math.div(math.max(map.get($min-line-height-sizes, s3), map.get($max-line-height-sizes, s3)) - math.min(map.get($min-line-height-sizes, s3), map.get($max-line-height-sizes, s3)), 2) + math.min(map.get($min-line-height-sizes, s3), map.get($max-line-height-sizes, s3))) * 1px;

    font-size: fd(rem(map.get($min-font-sizes, s0)), rem(map.get($max-font-sizes, s2)));
    font-weight: var(--font-weight-bold);
    line-height: fd($min-lh-value, $max-lh-value);
}

.archive-member__item__position {
    // font-textからfont-text--xsへの流体サイジング
    font-size: fd(rem(map.get($min-font-sizes, s-2)), rem(map.get($max-font-sizes, s0)));
    font-weight: var(--font-weight-sign);
    line-height: var(--line-height-sign);
}

.archive-member__item__thubmnail {
    --n: 1;
    --d: 1;

    display: block;
    width: 100%;
    overflow: hidden;
    border-radius: var(--radius-lg);
}
